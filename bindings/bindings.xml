<?xml version="1.0"?>
<typesystem package="SciQLopBindings">
    <system-include file-name="memory"/>
    <rejection class="std" function-name="^[a-z_]+$"/>
    <system-include file-name="memory"/>
    <system-include file-name="shared_ptr.h"/>
    <load-typesystem name="typesystem_core.xml" generate="no" />
    <load-typesystem name="typesystem_gui.xml" generate="no" />
    <load-typesystem name="typesystem_widgets.xml" generate="no" />
    <primitive-type name="std::string"/>
    <primitive-type name="std::size_t"/>
    <primitive-type name="long"/>
    <object-type name="Product" />
    <object-type name="IDataProvider">
        <modify-function signature="getData(const DataProviderParameters&amp;)">
            <modify-argument index="return">
                <define-ownership class="target" owner="default"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <enum-type name="DataSeriesType"/>
    <container-type name="std::vector" type="vector">
        <include file-name="vector" location="global"/>
        <conversion-rule>
            <native-to-target>
                %INTYPE::size_type vectorSize = %in.size();
                PyObject* %out = PyList_New((int) vectorSize);
                for (%INTYPE::size_type idx = 0; idx &lt; vectorSize; ++idx) {
                    %INTYPE_0 cppItem(%in[idx]);
                    PyList_SET_ITEM(%out, idx, %CONVERTTOPYTHON[%INTYPE_0](cppItem));
                }
                return %out;
            </native-to-target>
            <target-to-native>
                <add-conversion type="PySequence">
                    Shiboken::AutoDecRef seq(PySequence_Fast(%in, 0));
                    int vectorSize = PySequence_Fast_GET_SIZE(seq.object());
                    %out.reserve(vectorSize);
                    for (int idx = 0; idx &lt; vectorSize; ++idx ) {
                        PyObject* pyItem = PySequence_Fast_GET_ITEM(seq.object(), idx);
                        %OUTTYPE_0 cppItem = %CONVERTTOCPP[%OUTTYPE_0](pyItem);
                        %out.push_back(cppItem);
                    }
                </add-conversion>
            </target-to-native>
        </conversion-rule>
    </container-type>
    <primitive-type name="NpArray" target-lang-api-name="PyObject">
      <include file-name="numpy_wrappers.hpp" location="local"/>
      <conversion-rule>
          <native-to-target>
          auto result = %in.py_object();
          return result;
          </native-to-target>
          <target-to-native>
            <add-conversion type="PyObject" check="NpArray::isNpArray(%in)">
            %out = %OUTTYPE(%in);
            </add-conversion>
          </target-to-native>
        </conversion-rule>
    </primitive-type>
    <namespace-type name="py" visible="false">
        <object-type name="DataProvider">
            <modify-function signature="get_data(const QMap&lt;QString, QString&gt; &amp; , double, double)">
                <modify-argument index="return">
                    <define-ownership class="target" owner="c++"/>
                </modify-argument>
            </modify-function>
        </object-type>
        <object-type name="ITimeSerie" force-abstract="yes"/>
        <object-type name="ScalarTimeSerie" />
        <object-type name="VectorTimeSerie" />
        <object-type name="MultiComponentTimeSerie" />
        <object-type name="SpectrogramTimeSerie" />
    </namespace-type>
    <namespace-type name="SciQLopPlots" visible="true">
        <object-type name="SyncPanel" />
    </namespace-type>
    <namespace-type name="MIME" visible="true">
        <enum-type name="IDS" />
        <function signature="txt(IDS)" />
    </namespace-type>
    <object-type name="SciQLopObject" />
    <object-type name="MainWindow">
        <modify-function signature="addTimeSyncPanel(TimeSyncPanel*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="addWidgetIntoDock(Qt::DockWidgetArea,QWidget*)">
            <modify-argument index="2">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="toolBar()">
            <modify-argument index="return">
                <define-ownership class="target" owner="default"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="plotPanel(const QString &amp;)">
            <modify-argument index="return">
                <define-ownership class="target" owner="default"/>
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="CentralWidget" >
        <modify-function signature="addTimeSyncPanel(TimeSyncPanel*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="SciQLopCore" />
    <object-type name="DataSources">
        <modify-function signature="provider(const QString&amp;)">
            <modify-argument index="return">
                <define-ownership class="target" owner="default"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="ProductsTree" />
    <object-type name="TimeSyncPanel" />
    <object-type name="EventTimeSpan" />
</typesystem>



